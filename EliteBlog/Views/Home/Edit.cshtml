@model EliteBlog.Models.ViewModels.PostEditViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4>Post</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Post.Title" class="control-label"></label>
                <input asp-for="Post.Title" class="form-control" />
                <span asp-validation-for="Post.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Post.Text" class="control-label"></label>
                <input asp-for="Post.Text" class="form-control" />
                <span asp-validation-for="Post.Text" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Categories" class="control-label">Category</label>
                <select id="dropDownListEdit" asp-for="Categories" class="form-control selectpicker" asp-items="Model.Categories" multiple data-live-search="true">

                </select>
            </div>
            <div class="form-group">
                <label asp-for="Post.Photo" class="control-label">Photo</label>
                <input asp-for="Post.Photo" name="Photo" id="imageInput" type="file" class="form-control" accept=".gif,.jpg,.jpeg,.png" />
                <img style="max-width: 200px; max-height: 200px" class="my-2" src="~/images/uploads/@Model.Post.Photo" id="imagePreview" />
                <span asp-validation-for="Post.Photo" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Post.ID" />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

<script>
    $(document).ready(function () {
        
        let model = @Html.Raw(Json.Serialize(@Model));
        $("#dropDownListEdit").selectpicker()

        setTimeout(() => {
            let selectedCategories = []
            if (model.post.categories.length > 0) {
                model.post.categories.forEach((category) => {
                    selectedCategories.push(category.id)
                })
                $("#dropDownListEdit").selectpicker("val", selectedCategories)
            }
        }, 400)
        
        if (model.post.photo == null) {
            $("#imagePreview").addClass("d-none");
        }

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imagePreview').attr('src', e.target.result);
                }
                $("#imagePreview").removeClass("d-none");
                reader.readAsDataURL(input.files[0]);
            }
        }
        
        $("#imageInput").change(function () {
            readURL(this);
        });
    });
</script>
}
